#
version: "3.7"
#
services:
  #
  front:
    container_name: tgvmax-front
    build: frontend/.
    restart: unless-stopped
    env_file:
    - .env
    labels:
      - "traefik.enable=true"
      # - "traefik.http.services.tgvmax.loadbalancer.server.port=80"
      - "traefik.http.routers.tgvmax.rule=Host(`tgvmax.${DNS_MAIN_BASE}`)"
      - "traefik.http.routers.tgvmax.entrypoints=websecure"
      - "traefik.http.routers.tgvmax.tls=true"
      - "traefik.http.routers.tgvmax.tls.certresolver=letsencrypt"
      - "traefik.http.routers.tgvmax.middlewares=auth-basic"
    networks:
      - hosting_default
  #
  back:
    container_name: tgvmax-back
    build: backend/.
    restart: on-failure
    env_file:
    - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.tgvmax-api.loadbalancer.server.port=8080"
      - "traefik.http.routers.tgvmax-api.rule=Host(`tgvmax.${DNS_MAIN_BASE}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.tgvmax-api.entrypoints=websecure"
      - "traefik.http.routers.tgvmax-api.tls=true"
      - "traefik.http.routers.tgvmax-api.tls.certresolver=letsencrypt"
    volumes:
      # Database
      - ./tgvmax.sqlite:/usr/src/tgvmax.sqlite
    networks:
      - hosting_default
#
networks:
  hosting_default:
    external: true